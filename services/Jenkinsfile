pipeline  {  
agent any  
    stages  {
         stage('Clone sources')  {
             steps  {
                script {
                	def filelist = getChangedFilesList()
                	echo "${filelist}"
                }
            }
        }
    }
}

@NonCPS

def getChangedFilesList() {
       def job = [
            "dir1",
            "dir2",
            "dir3",
            "dir4",
            "dir5",
            "dir4v2",
            "dir5v2",
            "dir6",
            "dir7"
            ]
       changedFiles = []
       for(int i=0; i < job.size(); i++) {
            matches1 = sh (
                script: "git diff --name-only HEAD~1 | sort -u | awk -F/ {'print \$2,\$3'} | uniq | grep -x '${job[i]}'", returnStatus: true
            ) == 0
           echo "$matches1"
            /*if("$matches1"!="false"){
            	changedFiles.add("${job[i]}")
            }*/
       }
   return changedFiles
}
